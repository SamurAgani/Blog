#pragma checksum "C:\Users\Samur\OneDrive\Masa端st端\Blog\Blog\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1688c35d55212180d64c3ff1019067cf39c3c139"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1688c35d55212180d64c3ff1019067cf39c3c139", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Samur\OneDrive\Masa端st端\Blog\Blog\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<button type=""button"" id=""btngetList"" class=""btn btn-outline-primary"">
    Writer List
</button>
<button type=""button"" id=""btngetById"" class=""btn btn-outline-primary"">
    GetById
</button>
<button type=""button"" id=""btnaddwriter"" class=""btn btn-outline-primary"">
    AddWriter
</button>
<button type=""button"" id=""btnupdatewriter"" class=""btn btn-outline-danger"">
    Update
</button>
<button type=""button"" id=""btndeletewriter"" class=""btn btn-outline-danger"">
    Delete
</button>
<br />
<br />
<div id=""writerlist"">

</div>
<br />
<div id=""writerGet"">

</div>
<br />
<div");
            BeginWriteAttribute("class", " class=\"", 691, "\"", 699, 0);
            EndWriteAttribute();
            WriteLiteral(@">
    <input type=""text"" id=""WriterId"" placeholder=""Writer id"" class=""form-control"" />
</div>

<br />
<div>
    <input type=""text"" class=""form-control"" id=""txtWriterid"" placeholder=""Writer Id"" />
    <input type=""text"" class=""form-control"" id=""txtWritername"" placeholder=""Writer Name"" />
</div>
<br />
<div>
    <input type=""text"" id=""txtId"" placeholder=""Delete Writer id"" class=""form-control"" />
</div>
<br />
<div>
    <input type=""text"" id=""txtId1"" placeholder=""Updateed Writer id"" class=""form-control"" />
    <input type=""text"" id=""txtName1"" placeholder=""Updateed Writer name"" class=""form-control"" />
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        const { write } = require(""fs"");

        $(""#btngetList"").click(function () {
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""get"",
                url: ""/Admin/Writer/WriterList/"",
                success: function (func) {
                    let w = jQuery.parseJSON(func);
                    console.log(func);
                    let tableHtml = ""<table class=table table-bordered> <tr><th>WriterId</th> <th>Name</th></tr>"";

                    $.each(w, (index, value) => {
                        tableHtml += `<tr><td>${value.Id}</td><td>${value.Name}</td></tr>`;
                    });

                    tableHtml += ""</table>""
                    $(""#writerlist"").html(tableHtml);
                }
            });
        });

        $(""#btngetById"").click(x => {
            let id = $(""#WriterId"").val();
            $.ajax({
                contentType: ""application/json"",");
                WriteLiteral(@"
                dataType: ""json"",
                type: ""get"",
                url: ""/Admin/Writer/GetWriterById/"",
                data: { WriterId: id },
                success: function (func1) {
                    console.log(id);
                    let w = jQuery.parseJSON(func1);
                    let getvalue = `<table class=table table-bordered><tr><th>Writer ID<th>
                                                    <th>Name</th></tr> <tr><td>${w.id}</td><td>${w.Name}</td></tr></table>`;
                    $(""#writerGet"").html(getvalue);
                }
            });
        });

        $(""#btnaddwriter"").click(function () {
            let writer = {
                Id: $(""#txtWriterid"").val(),
                Name: $(""txtWritername"").val()
            };
            $.ajax({
                type: ""post"",
                url: ""/Admin/Writer/AddWriter/"",
                data: writer,
                success: function (func) {
                    let result = jQuer");
                WriteLiteral(@"y.parseJSON(func);
                    alert(""Success"");
                }
            })
        });

        $(""#btndeletewriter"").click(x => {
            let id = $(""#txtId"").val();

            $.ajax({
                url: ""/Admin/Writer/DeleteWriter/"" + id,
                dataType: ""json"",
                type: ""post"",
                success: function (func) {
                    let result = jQuery.parseJSON(func);
                    alert(""Success"");
                }
            });
        });

        $(""#btnupdatewriter"").click(func => {
            let writer = {
                Id: $(""#txtId1"").val(),
                Name: $(""#txtName1"").val()
            };
            $.ajax({
                type: ""post"",
                url: ""/Admin/Writer/UpdateWriter/"",
                data: writer,
                success: function (func) {
                    let result = jQuery.parseJSON(func);
                    alert(""Success"");
                }
            });
");
                WriteLiteral("        });\r\n\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
